# tao configmap bằng câu lệnh 
kubectl create configmap sonnh5 --from-literal env=production --from-literal domain=sonnh5.com
# Câu lệnh xem config map sonnh5
 kubectl  get configmap sonnh5 -o yaml
 # tạo configmap từ commandline và input từ một file
cat config.properties 

env=devops
domain=sonnh5.com
password=ssss
# tạo configmap từ file bằng câu lệnh sau 
kubectl create configmap sonnh4 --from-file=/root/config.properties

# Tạo configmap với Yaml Manifest
vim configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: myconfigmap
data:
  database: mongodb
  database_uri: mongodb://localhost:27017
  mysqld_config: |-
    [mysqld]
    tmp_table_size = 128M
    max_heap_table_size = 32M
    key_buffer_size = 16M
    max_allowed_packet = 64M
    table_on_cache = 600
    table_on = 1024
    
kubectl apply -f configmap.yaml 

# Sử dụng configmap với Pod kubernetes
# load toàn bộ key-value data của configmap thành biến môi trường 1 pod app.
apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    name: myapp
spec:
  containers:
  - name: myapp
    image: busybox
    command: [ "/bin/sh", "-c", "env"]
    envFrom:
      - configMapRef:
          name: myconfigmap

# Load một giá trị biến môi trường được khai báo trong pod từ Configmap key cụ thể
apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    name: myapp
spec:
  containers:
  - name: myapp
    image: busybox
    command: [ "/bin/sh", "-c", "env"]
    env:
      - name: DATABASE_URI
      valueFrom: 
        configMapKeyRef:
          name: myconfigmap
          key: database_uri
        
# Hoặc b có thể mount volume file config trong app container từ Configmap
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-sonnh5
spec:
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: mysql-sonnh5
    spec:
      containers:
      - name: mysql-sonnh5
        image: mysql:5.7
        ports:
          - 3306
        volumeMounts:
          - name: mysql-config
            mountPath: /etc/mysql/conf.d
       volumes:
          -name: mysql-config
           configMap: 
              name: myconfigmap
              item: 
                -key: mysqld_config 

# Một ví dụ khác:
# tạo một file tên là nginx-config-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  my-nginx-config.conf: |
    server {
      listen 80;
      server_name www.kubia-example.com;

      gzip on;
      gzip_types text/plain application/xml;

      location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
      }
    }

# Tạo một fiel tên là pod-nginx.yaml với config như sau:
apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
    - image: nginx:alpine
      name: web-server
      volumeMounts:
        - mountPath: /etc/nginx/conf.d # mount content of the configmap to container
          name: config
          readOnly: true
  volumes:
    - name: config # volume use configmap as content
      configMap:
        name: nginx-config # configmap name








# Tài liệu tham khảo:
https://viblo.asia/p/tao-va-su-dung-configmaps-trong-kubernetes-07LKXk8P5V4
https://viblo.asia/p/kubernetes-series-bai-8-configmap-and-secret-truyen-cau-hinh-vao-container-RQqKL6rrl7z
https://cuongquach.com/cau-hinh-configmap-kubernetes.html


        
     